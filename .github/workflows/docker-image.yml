name: Docker Image CI

on:
  push:
    branch:
      - main
    # tags:
    #   - v*
env:
  A_REPO: repoA
  B_REPO: repoB
  GITHUB_REPO_NAME: circleci-test
  IMAGE_NAME: push-test
      
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v3
    - name: Get Repository Release Version
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
        echo "A_RELEASE_VERSION=$(gh api repos/${{ github.repository_owner }}/${{ env.A_REPO }}/releases/latest --jq '.tag_name' | sed 's/^v//')" >> $GITHUB_ENV
        echo "B_RELEASE_VERSION=$(gh api repos/${{ github.repository_owner }}/${{ env.B_REPO }}/releases/latest --jq '.tag_name' | sed 's/^v//')" >> $GITHUB_ENV
        echo "IMAGE_TAG=1.10.0-py3.7-v1-eval-${{ env.A_REPO }}-${{ env.A_RELEASE_VERSION }}-${{ env.B_REPO }}-${{ env.B_RELEASE_VERSION }}" >> $GITHUB_ENV
    - name: Print Environment Variables
      run: |
        echo "A_REPO: ${A_REPO}"
        echo "B_REPO: ${B_REPO}"
        echo "A_RELEASE_VERSION: ${{ env.A_RELEASE_VERSION }}"
        echo "B_RELEASE_VERSION: ${{ env.B_RELEASE_VERSION }}"
        echo "GITHUB_REPO_NAME: ${{ env.GITHUB_REPO_NAME }}"
        echo "IMAGE_NAME: ${{ env.IMAGE_NAME }}"
        echo "github.event_name: ${{ github.event_name }}"
        echo "github.actor: ${{ github.actor }}"
        echo "github.repository : ${{ github.repository }}"

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag ${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG }}
        docker tag ${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG }} ghcr.io/${{ github.repository_owner }}/${{ env.GITHUB_REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
    - name: Login to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push the Docker image
      run: |
        docker push ghcr.io/${{ github.repository_owner }}/${{ env.GITHUB_REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}