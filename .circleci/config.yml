version: 2.1

executors:
  my-executor:
    machine: true
    environment:
      A_REPO: repoA
      B_REPO: repoB
      ECR_REPO_NAME: push-test

orbs:
  github-cli: circleci/github-cli@2.2.0
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  build-push-image:
    executor: my-executor
    steps:
      - github-cli/setup
      - checkout
      - run:
          name: Get Repository Release Version
          command: |
            echo "export A_RELEASE_VERSION=$(gh api repos/${CIRCLE_PROJECT_USERNAME}/${A_REPO}/releases/latest --jq '.tag_name')" >> "$BASH_ENV"
            echo "export B_RELEASE_VERSION=$(gh api repos/${CIRCLE_PROJECT_USERNAME}/${B_REPO}/releases/latest --jq '.tag_name' | sed 's/^v//')" >> "$BASH_ENV"
      - run:
          name: Print Environment Variables
          command: |
            echo "A_RELEASE_VERSION: ${A_RELEASE_VERSION}"
            echo "B_RELEASE_VERSION: ${B_RELEASE_VERSION}"
            source $BASH_ENV
      - aws-ecr/build-and-push-image:
          registry-id: AWS_ECR_REGISTRY_ID
          region: ${AWS_DEFAULT_REGION}
          repo: ${ECR_REPO_NAME}
          tag: ${CIRCLE_TAG}
          extra-build-args: --build-arg repoA=${A_RELEASE_VERSION} --build-arg repoB=${B_RELEASE_VERSION}
      # - aws-ecr/ecr-login:
      #     region: ${AWS_DEFAULT_REGION}
      #     registry-id: AWS_ECR_REGISTRY_ID
      # - run:
      #     name: Build and push image
      #     command: |
      #       docker build --build-arg repoA=${A_RELEASE_VERSION} --build-arg repoB=${B_RELEASE_VERSION} -t ${ECR_REPO_NAME} .
      #       docker tag ${ECR_REPO_NAME}:latest ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPO_NAME}:${CIRCLE_TAG}
      #       docker push ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPO_NAME}:${CIRCLE_TAG}

workflows:
  build-push-image:
    jobs:
      - build-push-image:
          context: research
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^py.*/